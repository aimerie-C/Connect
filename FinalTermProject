using System;

class GameBoard
{
    private char[,] _board;
    public int Rows { get; private set; }
    public int Cols { get; private set; }

    public GameBoard(int rows, int cols)
    {
        Rows = rows;
        Cols = cols;
        _board = new char[Rows, Cols];
        InitializeBoard();
    }

    public void InitializeBoard()
    {
        for (int rows = 0; rows < Rows; rows++)
        {
            for (int cols = 0; cols < Cols; cols++)
            {
                _board[rows, cols] = ' ';
            }
        }
    }

    public void ResetBoard()
    {
        // Reset the board to its initial state
        InitializeBoard();
    }

    public void DrawBoard()
    {
        Console.Clear();

        Console.WriteLine();
       
        for (int rows = 0; rows < Rows; rows++)
        {
            Console.Write("|");
            for (int cols = 0; cols < Cols; cols++)
            {
                char symbol = _board[rows, cols] == ' ' ? '#' : _board[rows, cols];
                Console.Write(symbol + " ");
            }
            Console.WriteLine("|");
        }
        Console.WriteLine(" 1 2 3 4 5 6 7");
    }

    public bool PlaceSymbol(int cols, char symbol)
    {
        if (!IsColumnOpen(cols))
        {
            return false; // Column is full
        }
    
        for (int rows = Rows - 1; rows >= 0; rows--)
        {
            if (_board[rows, cols] == ' ')
            {
                _board[rows, cols] = symbol;
                return true;
            }
        }
        return false;
    }
     public bool IsColumnOpen(int cols)
     {
         // Check if the column has at least one empty space
         for (int rows = 0; rows < Rows; rows++)
         {
             if (_board[rows, cols] == ' ')
             {
                 return true; // Column has space
             }
         }
         return false; // Column is full
     }
    public bool IsBoardFull()
    {
        for (int rows = 0; rows < Rows; rows++)
        {
            for (int cols = 0; cols < Cols; cols++)
            {
                if (_board[rows, cols] == ' ')
                {
                    return false;
                }
            }
        }
        return true;
    }
    public bool CheckWin(char symbol)
    {
        return CheckStraightLines(symbol) || CheckDiagonals(symbol);
    }

     private bool CheckStraightLines(char symbol)
     {
         // Check horizontally and vertically for four consecutive symbols
         for (int rows = 0; rows < Rows; rows++)
         {
             for (int cols = 0; cols < Cols - 3; cols++)
             {
                 if (_board[rows, cols] == symbol &&
                     _board[rows, cols] == _board[rows, cols + 1] &&
                     _board[rows, cols] == _board[rows, cols + 2] &&
                     _board[rows, cols] == _board[rows, cols + 3])
                 {
                     return true;
                 }
             }
         }

        for (int cols = 0; cols < Cols; cols++)
        {
            for (int rows = 0; rows < Rows - 3; rows++)
            {
                if (_board[rows, cols] == symbol &&
                    _board[rows, cols] == _board[rows + 1, cols] &&
                    _board[rows, cols] == _board[rows + 2, cols] &&
                    _board[rows, cols] == _board[rows + 3, cols])
                {
                    return true;
                }
            }
        }
    
        return false;
        }

    private bool CheckDiagonals(char symbol)
    {
        // Check diagonally (both directions) for four consecutive symbols
        for (int rows = 0; rows < Rows - 3; rows++)
        {
            for (int cols = 0; cols < Cols - 3; cols++)
            {
                // Check "\" diagonals
                if (_board[rows, cols] == symbol &&
                    _board[rows, cols] == _board[rows + 1, cols + 1] &&
                    _board[rows, cols] == _board[rows + 2, cols + 2] &&
                    _board[rows, cols] == _board[rows + 3, cols + 3])
                {
                    return true;
                }
    }
}






class Program
{
    static void Main(string[] args)
    {
        Console.WriteLine("Welcome to Connect Four! \n");
    }
}

